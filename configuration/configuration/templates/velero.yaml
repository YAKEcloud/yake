apiVersion: v1
kind: Secret
metadata:
  name: velero-base-values
  namespace: flux-system
type: Opaque
stringData:
  values.yaml: |
{{- if .Values.backups.enabled }}
    snapshotsEnabled: false
{{- if .Values.registryOverwrite }}
    image:
      repository: {{ include "replaceRegistry" (dict "docker.io/velero/velero" .Values.registryOverwrite) }}
{{- end }}
{{- if eq .Values.backups.provider "azure" }}
    credentials:
      useSecret: false
    configuration:
      extraEnvVars:
        AZURE_STORAGE_ACCOUNT_ACCESS_KEY: {{ .Values.backups.credentials.storageAccountAccessKey | b64dec }}
        AZURE_CLOUD_NAME: AzurePublicCloud
      backupStorageLocation:
        - bucket: {{ .Values.backups.bucketName }}
          provider: azure
          prefix: velero-backup
          config:
            storageAccount: {{ .Values.backups.credentials.storageAccount | b64dec }}
            storageAccountKeyEnvVar: AZURE_STORAGE_ACCOUNT_ACCESS_KEY
    initContainers:
      - name: velero-plugin-for-microsoft-azure
{{- if .Values.registryOverwrite }}
        image: {{ include "replaceRegistry" (dict "docker.io/velero/velero-plugin-for-microsoft-azure:v1.6.0" .Values.registryOverwrite) }}
{{- else }}
        image: velero/velero-plugin-for-microsoft-azure:v1.7.0
{{- end }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins

{{- else if eq .Values.backups.provider "aws" }}
    credentials:
      useSecret: false
    configuration:
      extraEnvVars:
        AWS_ACCESS_KEY_ID: {{ .Values.backups.credentials.accessKeyID | b64dec }}
        AWS_SECRET_ACCESS_KEY: {{ .Values.backups.credentials.secretAccessKey | b64dec }}
      backupStorageLocation:
        - bucket: {{ .Values.backups.bucketName }}
          provider: aws
          prefix: velero-backup
          config:
            region: {{ .Values.backups.region }}
    initContainers:
      - name: velero-plugin-for-aws
{{- if .Values.registryOverwrite }}
        image: {{ include "replaceRegistry" (dict "docker.io/velero/velero-plugin-for-aws:v1.6.0" .Values.registryOverwrite) }}
{{- else }}
        image: velero/velero-plugin-for-aws:v1.7.0
{{- end }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins

{{- else if eq .Values.backups.provider "openstack" }}
    credentials:
      useSecret: false
    configuration:
      extraEnvVars:
        OS_AUTH_URL: {{ .Values.backups.credentials.authURL | b64dec }}
        OS_PASSWORD: {{ .Values.backups.credentials.password | b64dec }}
        OS_USERNAME: {{ .Values.backups.credentials.username | b64dec }}
        OS_PROJECT_NAME: {{ .Values.backups.credentials.tenantName | b64dec }}
        OS_REGION_NAME: {{ .Values.backups.credentials.region | b64dec }}
        OS_DOMAIN_NAME: {{ .Values.backups.credentials.domainName | b64dec }}
      backupStorageLocation:
        - bucket: {{ .Values.backups.bucketName }}
          provider: community.openstack.org/openstack
          prefix: velero-backup
          config:
            region: {{ .Values.backups.region }}
    initContainers:
      - name: velero-plugin-for-openstack
{{- if .Values.registryOverwrite }}
        image: {{ include "replaceRegistry" (dict "docker.io/lirt/velero-plugin-for-openstack:v0.4.1" .Values.registryOverwrite) }}
{{- else }}
        image: lirt/velero-plugin-for-openstack:v0.5.2
{{- end }}
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins
{{- end }}

    schedules:
        full-cluster-hourly:
          labels:
            backup: full-cluster
            schedule: hourly
          schedule: "@every 1h"
          template:
            ttl: "52h0m"
            includedNamespaces:
              - '*'
        full-cluster-daily:
          labels:
            backup: full-cluster
            schedule: daily
          schedule: "@every 24h"
          template:
            ttl: "2160h0m"
            includedNamespaces:
              - '*'
{{- end }}
