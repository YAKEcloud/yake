{{- if .Values.global.admission.enabled }}
apiVersion: {{ include "webhookadmissionregistration" . }}
kind: ValidatingWebhookConfiguration
metadata:
  name: validate-namespace-deletion
webhooks:
- name: validate-namespace-deletion.gardener.cloud
  admissionReviewVersions: ["v1", "v1beta1"]
  timeoutSeconds: 10
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - DELETE
    resources:
    - namespaces
  failurePolicy: Fail
  namespaceSelector:
    matchLabels:
      gardener.cloud/role: project
  clientConfig:
    {{- if .Values.global.deployment.virtualGarden.enabled }}
    url: https://gardener-admission-controller.garden/webhooks/validate-namespace-deletion
    {{- else }}
    service:
      namespace: garden
      name: gardener-admission-controller
      path: /webhooks/validate-namespace-deletion
    {{- end }}
    caBundle: {{ required ".Values.global.admission.config.server.https.tls.caBundle is required" (b64enc .Values.global.admission.config.server.https.tls.caBundle) }}
  sideEffects: None
- name: validate-kubeconfig-secrets.gardener.cloud
  admissionReviewVersions: ["v1", "v1beta1"]
  timeoutSeconds: 10
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  failurePolicy: Fail
  namespaceSelector:
    matchExpressions:
    - {key: gardener.cloud/role, operator: In, values: [project]}
    - {key: app, operator: NotIn, values: [gardener]}
  clientConfig:
    {{- if .Values.global.deployment.virtualGarden.enabled }}
    url: https://gardener-admission-controller.garden/webhooks/validate-kubeconfig-secrets
    {{- else }}
    service:
      namespace: garden
      name: gardener-admission-controller
      path: /webhooks/validate-kubeconfig-secrets
    {{- end }}
    caBundle: {{ required ".Values.global.admission.config.server.https.tls.caBundle is required" (b64enc .Values.global.admission.config.server.https.tls.caBundle) }}
  sideEffects: None
{{- if .Values.global.admission.config.server.resourceAdmissionConfiguration }}
- name: validate-resource-size.gardener.cloud
  admissionReviewVersions: ["v1", "v1beta1"]
  timeoutSeconds: 10
  rules:
    {{- range $i, $conf := .Values.global.admission.config.server.resourceAdmissionConfiguration.limits }}
  - apiGroups:
{{ toYaml $conf.apiGroups | indent 4 }}
    apiVersions:
{{ toYaml $conf.apiVersions | indent 4 }}
    operations:
    - CREATE
    - UPDATE
    resources:
{{ toYaml $conf.resources | indent 4 }}
    {{- end }}
  failurePolicy: Fail
  namespaceSelector:
    matchExpressions:
      - {key: gardener.cloud/role, operator: In, values: [project]}
      - {key: app, operator: NotIn, values: [gardener]}
  clientConfig:
    {{- if .Values.global.deployment.virtualGarden.enabled }}
    url: https://gardener-admission-controller.garden/webhooks/validate-resource-size
    {{- else }}
    service:
      namespace: garden
      name: gardener-admission-controller
      path: /webhooks/validate-resource-size
    {{- end }}
    caBundle: {{ required ".Values.global.admission.config.server.https.tls.caBundle is required" (b64enc .Values.global.admission.config.server.https.tls.caBundle) }}
  sideEffects: None
{{- end }}
{{- if .Values.global.admission.seedRestriction.enabled }}
- name: seed-restriction.gardener.cloud
  admissionReviewVersions: ["v1", "v1beta1"]
  timeoutSeconds: 10
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - secrets
    - serviceaccounts
  - apiGroups:
    - rbac.authorization.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - clusterrolebindings
  - apiGroups:
    - coordination.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - leases
  - apiGroups:
    - certificates.k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    resources:
    - certificatesigningrequests
  - apiGroups:
    - core.gardener.cloud
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    resources:
    - backupentries
    - shootstates
  - apiGroups:
    - core.gardener.cloud
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - DELETE
    resources:
    - backupbuckets
  - apiGroups:
    - operations.gardener.cloud
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - bastions
  - apiGroups:
    - core.gardener.cloud
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - seeds
  failurePolicy: Fail
  matchPolicy: Equivalent
  clientConfig:
    {{- if .Values.global.deployment.virtualGarden.enabled }}
    url: https://gardener-admission-controller.garden/webhooks/admission/seedrestriction
    {{- else }}
    service:
      namespace: garden
      name: gardener-admission-controller
      path: /webhooks/admission/seedrestriction
    {{- end }}
    caBundle: {{ required ".Values.global.admission.config.server.https.tls.caBundle is required" (b64enc .Values.global.admission.config.server.https.tls.caBundle) }}
  sideEffects: None
{{- end }}
- name: internal-domain-secret.gardener.cloud
  admissionReviewVersions: ["v1", "v1beta1"]
  timeoutSeconds: 10
  objectSelector:
    matchLabels:
      gardener.cloud/role: internal-domain
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  failurePolicy: Fail
  clientConfig:
    {{- if .Values.global.deployment.virtualGarden.enabled }}
    url: https://gardener-admission-controller.garden/webhooks/admission/validate-internal-domain
    {{- else }}
    service:
      namespace: garden
      name: gardener-admission-controller
      path: /webhooks/admission/validate-internal-domain
    {{- end }}
    caBundle: {{ required ".Values.global.admission.config.server.https.tls.caBundle is required" (b64enc .Values.global.admission.config.server.https.tls.caBundle) }}
  sideEffects: None
{{- end }}
