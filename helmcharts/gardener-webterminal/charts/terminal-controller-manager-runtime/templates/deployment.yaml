apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: terminal-manager
    control-plane: controller-manager
  name: terminal-controller-manager
spec:
  replicas: {{ required ".Values.global.runtime.replicaCount is required" .Values.global.runtime.replicaCount }}
  selector:
    matchLabels:
      component: terminal-manager
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        component: terminal-manager
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: {{ required "$.Values.global.runtime.images.proxy.repository is required" $.Values.global.runtime.images.proxy.repository }}:{{ required "$.Values.global.runtime.images.proxy.tag is required" $.Values.global.runtime.images.proxy.tag }}
        imagePullPolicy: {{ .Values.global.runtime.images.proxy.pullPolicy }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 500m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /etc/terminal-controller-manager/secrets/kubeconfig
          name: terminal-controller-secret-kubeconfig
          readOnly: true
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --config-file=/etc/terminal-controller-manager/config.yaml
        - --zap-devel=false
        command:
        - /manager
        env:
        - name: KUBECONFIG
          value: /etc/terminal-controller-manager/secrets/kubeconfig/value
        image: {{ required "$.Values.global.runtime.images.terminalControllerManager.repository is required" $.Values.global.runtime.images.terminalControllerManager.repository }}:{{ required "$.Values.global.runtime.images.terminalControllerManager.tag is required" $.Values.global.runtime.images.terminalControllerManager.tag }}
        imagePullPolicy: {{ .Values.global.runtime.images.terminalControllerManager.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
{{ toYaml .Values.global.runtime.resources | indent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /etc/terminal-controller-manager/secrets/kubeconfig
          name: terminal-controller-secret-kubeconfig
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /etc/terminal-controller-manager
          name: manager-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      serviceAccountName: terminal-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: terminal-controller-secret-kubeconfig
        secret:
          secretName: gardener-internal-kubeconfig
      - name: cert
        secret:
          defaultMode: 420
          secretName: terminal-webhook-server-cert
      - configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: terminal-controller-manager-configmap
        name: manager-config
